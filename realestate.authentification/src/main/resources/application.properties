spring.application.name=realestate.authentification
#Keycloak authorization properties
keycloak.realm=Real Estate
keycloak.resource=realestate-service
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.ssl-required=external
keycloak.use-resource-role-mappings=true

#keycloak authentication properties
app.keycloak.login.url=http://localhost:8080/realms/Real%20Estate%20/protocol/openid-connect/token
app.keycloak.grant-type=password
app.keycloak.client-id = ${keycloak.resource}
app.keycloak.client-secret=eur8OR3GLCEAZejwX6pKn4ZpEZid27mC


#Define authorization rules
#keycloak.security-constraints[0].authRoles[0]=visitor
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/visitor/*
#keycloak.security-constraints[0].authRoles[1]=admin
#keycloak.security-constraints[0].securityCollections[1].patterns[1]=/admin/*
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
eureka.client.enabled=false
server.port=8081


#confirg baeldung
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.resource}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/Real%20Estate%20
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/Real%20Estate%20